//TIME COMPLEXITY :O(n^2).
  // SPACE COMPLEXITY :O(1).
#include <stdio.h>

// Function to perform selection sort
void selectionSort(int arr[], int n) 
{
    int i,j,min_idx,temp;
    
    // Outer loop: one by one move the boundary of the unsorted subarray
    for (i = 0;i<n-1;i++)
    {
     // Assume the current element is the minimum
        min_idx=i;
        // Inner loop to find the smallest element in the unsorted part of the array
        for (j=i+1;j<n;j++)
        {
            // Update min_idx if a smaller element is found
            if (arr[j]<arr[min_idx])
            {
                min_idx=j;
            }
        }
        // Swap the found minimum element with the first element of the unsorted part
        if (min_idx!=i) 
        {
            temp=arr[i];
            arr[i]=arr[min_idx];
            arr[min_idx]=temp;
        }
    }
}
int main() 
{
    int n;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) 
    {
        scanf("%d", &arr[i]);
    }
    // Perform selection sort
    selectionSort(arr, n);
    for (int i=0;i<n;i++) 
    {
        printf("%d ",arr[i]);
    }
  
    return 0;
}
